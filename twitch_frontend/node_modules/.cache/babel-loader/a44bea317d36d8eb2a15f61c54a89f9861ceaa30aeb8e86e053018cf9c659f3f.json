{"ast":null,"code":"var SERVER_ORIGIN=\"\";var loginUrl=\"\".concat(SERVER_ORIGIN,\"/login\");export var login=function login(credential){var formData=new FormData();formData.append(\"username\",credential.username);formData.append(\"password\",credential.password);return fetch(loginUrl,{method:\"POST\",credentials:\"include\",body:formData}).then(function(response){if(response.status!==204){throw Error(\"Fail to log in\");}});};var registerUrl=\"\".concat(SERVER_ORIGIN,\"/register\");export var register=function register(data){return fetch(registerUrl,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)}).then(function(response){if(response.status!==200){throw Error(\"Fail to register\");}});};var logoutUrl=\"\".concat(SERVER_ORIGIN,\"/logout\");export var logout=function logout(){return fetch(logoutUrl,{method:\"POST\",credentials:\"include\"}).then(function(response){if(response.status!==204){throw Error(\"Fail to log out\");}});};var topGamesUrl=\"\".concat(SERVER_ORIGIN,\"/game\");export var getTopGames=function getTopGames(){return fetch(topGamesUrl).then(function(response){if(response.status!==200){throw Error(\"Fail to get top games\");}return response.json();});};var getGameDetailsUrl=\"\".concat(SERVER_ORIGIN,\"/game?game_name=\");var getGameDetails=function getGameDetails(gameName){return fetch(\"\".concat(getGameDetailsUrl).concat(gameName)).then(function(response){if(response.status!==200){throw Error(\"Fail to find the game\");}return response.json();});};var searchGameByIdUrl=\"\".concat(SERVER_ORIGIN,\"/search?game_id=\");export var searchGameById=function searchGameById(gameId){return fetch(\"\".concat(searchGameByIdUrl).concat(gameId)).then(function(response){if(response.status!==200){throw Error(\"Fail to find the game\");}return response.json();});};export var searchGameByName=function searchGameByName(gameName){return getGameDetails(gameName).then(function(data){if(data&&data[0].id){return searchGameById(data[0].id);}throw Error(\"Fail to find the game\");});};var favoriteItemUrl=\"\".concat(SERVER_ORIGIN,\"/favorite\");export var addFavoriteItem=function addFavoriteItem(favItem){return fetch(favoriteItemUrl,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},credentials:\"include\",body:JSON.stringify({favorite:favItem})}).then(function(response){if(response.status!==200){throw Error(\"Fail to add favorite item\");}});};export var deleteFavoriteItem=function deleteFavoriteItem(favItem){return fetch(favoriteItemUrl,{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"},credentials:\"include\",body:JSON.stringify({favorite:favItem})}).then(function(response){if(response.status!==200){throw Error(\"Fail to delete favorite item\");}});};export var getFavoriteItem=function getFavoriteItem(){return fetch(favoriteItemUrl,{credentials:\"include\"}).then(function(response){if(response.status!==200){throw Error(\"Fail to get favorite item\");}return response.json();});};var getRecommendedItemsUrl=\"\".concat(SERVER_ORIGIN,\"/recommendation\");export var getRecommendations=function getRecommendations(){return fetch(getRecommendedItemsUrl,{credentials:\"include\"}).then(function(response){if(response.status!==200){throw Error(\"Fail to get recommended item\");}return response.json();});};","map":{"version":3,"names":["SERVER_ORIGIN","loginUrl","concat","login","credential","formData","FormData","append","username","password","fetch","method","credentials","body","then","response","status","Error","registerUrl","register","data","headers","JSON","stringify","logoutUrl","logout","topGamesUrl","getTopGames","json","getGameDetailsUrl","getGameDetails","gameName","searchGameByIdUrl","searchGameById","gameId","searchGameByName","id","favoriteItemUrl","addFavoriteItem","favItem","favorite","deleteFavoriteItem","getFavoriteItem","getRecommendedItemsUrl","getRecommendations"],"sources":["/Users/zhehuang/twitchfe/src/utils.js"],"sourcesContent":["const SERVER_ORIGIN = \"\";\n\nconst loginUrl = `${SERVER_ORIGIN}/login`;\n\nexport const login = (credential) => {\n  const formData = new FormData();\n  formData.append(\"username\", credential.username);\n  formData.append(\"password\", credential.password);\n\n  return fetch(loginUrl, {\n    method: \"POST\",\n    credentials: \"include\",\n    body: formData,\n  }).then((response) => {\n    if (response.status !== 204) {\n      throw Error(\"Fail to log in\");\n    }\n  });\n};\n\nconst registerUrl = `${SERVER_ORIGIN}/register`;\n\nexport const register = (data) => {\n  return fetch(registerUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to register\");\n    }\n  });\n};\n\nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\n\nexport const logout = () => {\n  return fetch(logoutUrl, {\n    method: \"POST\",\n    credentials: \"include\",\n  }).then((response) => {\n    if (response.status !== 204) {\n      throw Error(\"Fail to log out\");\n    }\n  });\n};\n\nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\n\nexport const getTopGames = () => {\n  return fetch(topGamesUrl).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get top games\");\n    }\n\n    return response.json();\n  });\n};\n\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\n\nconst getGameDetails = (gameName) => {\n  return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to find the game\");\n    }\n\n    return response.json();\n  });\n};\n\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\n\nexport const searchGameById = (gameId) => {\n  return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to find the game\");\n    }\n    return response.json();\n  });\n};\n\nexport const searchGameByName = (gameName) => {\n  return getGameDetails(gameName).then((data) => {\n    if (data && data[0].id) {\n      return searchGameById(data[0].id);\n    }\n\n    throw Error(\"Fail to find the game\");\n  });\n};\n\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\n\nexport const addFavoriteItem = (favItem) => {\n  return fetch(favoriteItemUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify({ favorite: favItem }),\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to add favorite item\");\n    }\n  });\n};\n\nexport const deleteFavoriteItem = (favItem) => {\n  return fetch(favoriteItemUrl, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify({ favorite: favItem }),\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to delete favorite item\");\n    }\n  });\n};\n\nexport const getFavoriteItem = () => {\n  return fetch(favoriteItemUrl, {\n    credentials: \"include\",\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get favorite item\");\n    }\n\n    return response.json();\n  });\n};\n\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\n\nexport const getRecommendations = () => {\n  return fetch(getRecommendedItemsUrl, {\n    credentials: \"include\",\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get recommended item\");\n    }\n\n    return response.json();\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}