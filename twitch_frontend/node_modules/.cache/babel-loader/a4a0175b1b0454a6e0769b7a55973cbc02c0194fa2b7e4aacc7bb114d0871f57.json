{"ast":null,"code":"const SERVER_ORIGIN = \"\";\nconst loginUrl = `${SERVER_ORIGIN}/login`;\nexport const login = credential => {\n  const formData = new FormData();\n  formData.append(\"username\", credential.username);\n  formData.append(\"password\", credential.password);\n  return fetch(loginUrl, {\n    method: \"POST\",\n    credentials: \"include\",\n    body: formData\n  }).then(response => {\n    if (response.status !== 204) {\n      throw Error(\"Fail to log in\");\n    }\n  });\n};\nconst registerUrl = `${SERVER_ORIGIN}/register`;\nexport const register = data => {\n  return fetch(registerUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to register\");\n    }\n  });\n};\nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\nexport const logout = () => {\n  return fetch(logoutUrl, {\n    method: \"POST\",\n    credentials: \"include\"\n  }).then(response => {\n    if (response.status !== 204) {\n      throw Error(\"Fail to log out\");\n    }\n  });\n};\nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\nexport const getTopGames = () => {\n  return fetch(topGamesUrl).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get top games\");\n    }\n    return response.json();\n  });\n};\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\nconst getGameDetails = gameName => {\n  return fetch(`${getGameDetailsUrl}${gameName}`).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to find the game\");\n    }\n    return response.json();\n  });\n};\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\nexport const searchGameById = gameId => {\n  return fetch(`${searchGameByIdUrl}${gameId}`).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to find the game\");\n    }\n    return response.json();\n  });\n};\nexport const searchGameByName = gameName => {\n  return getGameDetails(gameName).then(data => {\n    if (data && data[0].id) {\n      return searchGameById(data[0].id);\n    }\n    throw Error(\"Fail to find the game\");\n  });\n};\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\nexport const addFavoriteItem = favItem => {\n  return fetch(favoriteItemUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      favorite: favItem\n    })\n  }).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to add favorite item\");\n    }\n  });\n};\nexport const deleteFavoriteItem = favItem => {\n  return fetch(favoriteItemUrl, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      favorite: favItem\n    })\n  }).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to delete favorite item\");\n    }\n  });\n};\nexport const getFavoriteItem = () => {\n  return fetch(favoriteItemUrl, {\n    credentials: \"include\"\n  }).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get favorite item\");\n    }\n    return response.json();\n  });\n};\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\nexport const getRecommendations = () => {\n  return fetch(getRecommendedItemsUrl, {\n    credentials: \"include\"\n  }).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get recommended item\");\n    }\n    return response.json();\n  });\n};","map":{"version":3,"names":["SERVER_ORIGIN","loginUrl","login","credential","formData","FormData","append","username","password","fetch","method","credentials","body","then","response","status","Error","registerUrl","register","data","headers","JSON","stringify","logoutUrl","logout","topGamesUrl","getTopGames","json","getGameDetailsUrl","getGameDetails","gameName","searchGameByIdUrl","searchGameById","gameId","searchGameByName","id","favoriteItemUrl","addFavoriteItem","favItem","favorite","deleteFavoriteItem","getFavoriteItem","getRecommendedItemsUrl","getRecommendations"],"sources":["/Users/zhehuang/twitchfe/src/utils.js"],"sourcesContent":["const SERVER_ORIGIN = \"\";\n\nconst loginUrl = `${SERVER_ORIGIN}/login`;\n\nexport const login = (credential) => {\n  const formData = new FormData();\n  formData.append(\"username\", credential.username);\n  formData.append(\"password\", credential.password);\n\n  return fetch(loginUrl, {\n    method: \"POST\",\n    credentials: \"include\",\n    body: formData,\n  }).then((response) => {\n    if (response.status !== 204) {\n      throw Error(\"Fail to log in\");\n    }\n  });\n};\n\nconst registerUrl = `${SERVER_ORIGIN}/register`;\n\nexport const register = (data) => {\n  return fetch(registerUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to register\");\n    }\n  });\n};\n\nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\n\nexport const logout = () => {\n  return fetch(logoutUrl, {\n    method: \"POST\",\n    credentials: \"include\",\n  }).then((response) => {\n    if (response.status !== 204) {\n      throw Error(\"Fail to log out\");\n    }\n  });\n};\n\nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\n\nexport const getTopGames = () => {\n  return fetch(topGamesUrl).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get top games\");\n    }\n\n    return response.json();\n  });\n};\n\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\n\nconst getGameDetails = (gameName) => {\n  return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to find the game\");\n    }\n\n    return response.json();\n  });\n};\n\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\n\nexport const searchGameById = (gameId) => {\n  return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to find the game\");\n    }\n    return response.json();\n  });\n};\n\nexport const searchGameByName = (gameName) => {\n  return getGameDetails(gameName).then((data) => {\n    if (data && data[0].id) {\n      return searchGameById(data[0].id);\n    }\n\n    throw Error(\"Fail to find the game\");\n  });\n};\n\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\n\nexport const addFavoriteItem = (favItem) => {\n  return fetch(favoriteItemUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify({ favorite: favItem }),\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to add favorite item\");\n    }\n  });\n};\n\nexport const deleteFavoriteItem = (favItem) => {\n  return fetch(favoriteItemUrl, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify({ favorite: favItem }),\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to delete favorite item\");\n    }\n  });\n};\n\nexport const getFavoriteItem = () => {\n  return fetch(favoriteItemUrl, {\n    credentials: \"include\",\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get favorite item\");\n    }\n\n    return response.json();\n  });\n};\n\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\n\nexport const getRecommendations = () => {\n  return fetch(getRecommendedItemsUrl, {\n    credentials: \"include\",\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get recommended item\");\n    }\n\n    return response.json();\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}